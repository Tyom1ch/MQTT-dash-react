import React, { useState, useEffect, useRef } from "react";
import {
  Box,
  Button,
  TextField,
  Tabs,
  Tab,
  Typography,
  CircularProgress,
  Checkbox,
  FormControlLabel,
} from "@mui/material";
import { useNavigate } from "react-router-dom";
import useAppConfig from "../hooks/useAppConfig";
import { Capacitor } from "@capacitor/core";
import { Filesystem, Directory, Encoding } from '@capacitor/filesystem';
import { Share } from '@capacitor/share';

function SettingsPage({ brokers, setBrokers }) {
  const navigate = useNavigate();
  const { appConfig, setAppConfig } = useAppConfig();
  const fileInputRef = useRef(null);

  const initialBrokerState = brokers?.length
    ? { ...brokers[0] }
    : {
        id: "",
        name: "–û—Å–Ω–æ–≤–Ω–∏–π –±—Ä–æ–∫–µ—Ä",
        host: "",
        port: "",
        username: "",
        password: "",
        discovery_topic: "homeassistant",
        secure: false,
        basepath: "",
      };

  const [currentBrokerConfig, setCurrentBrokerConfig] = useState(initialBrokerState);
  const [tabIndex, setTabIndex] = useState(0);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  useEffect(() => {
    if (brokers?.length) {
      setCurrentBrokerConfig({ ...brokers[0] });
    } else {
      setCurrentBrokerConfig(initialBrokerState);
    }
  }, [brokers]);

  const handleBrokerConfigChange = (e) => {
    const { name, value, type, checked } = e.target;
    setCurrentBrokerConfig((prev) => ({
      ...prev,
      [name]: type === "checkbox" ? checked : value,
    }));
  };

  const handleSaveBroker = async () => {
    setError("");
    setLoading(true);
    try {
      if (!currentBrokerConfig.host || !currentBrokerConfig.port) {
        throw new Error("Host —Ç–∞ Port –±—Ä–æ–∫–µ—Ä–∞ —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º–∏.");
      }
      const newBrokerId = currentBrokerConfig.id || `broker-${Date.now()}`;
      const brokerToSave = {
        ...currentBrokerConfig,
        id: newBrokerId,
        port: parseInt(currentBrokerConfig.port, 10),
        basepath: currentBrokerConfig.basepath || "",
        discovery_topic:
          currentBrokerConfig.discovery_topic?.trim() || "homeassistant",
      };
      const updatedBrokers = brokers?.length
        ? brokers.map((b, index) => (index === 0 ? brokerToSave : b))
        : [brokerToSave];
      setBrokers(updatedBrokers);
      alert("–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±—Ä–æ–∫–µ—Ä–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–æ. –ó'—î–¥–Ω–∞–Ω–Ω—è –±—É–¥–µ –æ–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.");
    } catch (err) {
      setError(err.message);
      console.error("–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –±—Ä–æ–∫–µ—Ä–∞:", err);
    } finally {
      setLoading(false);
    }
  };

  /**
   * –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó.
   * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î Share API –Ω–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö —Ç–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É –≤ –≤–µ–±—ñ.
   */
  const handleExportConfig = async () => {
    setError("");
    setLoading(true);

    try {
      const fileName = `edwic-backup-${new Date().toISOString().split("T")[0]}.json`;
      const json = JSON.stringify(appConfig, null, 2);

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–∏ –Ω–∞ –Ω–∞—Ç–∏–≤–Ω—ñ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ
      if (Capacitor.isNativePlatform()) {
        // --- –†–ï–ê–õ–Ü–ó–ê–¶–Ü–Ø –î–õ–Ø NATIVE MOBILE (iOS/Android) ---
        const result = await Filesystem.writeFile({
          path: fileName,
          data: json,
          directory: Directory.Cache, // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à –¥–ª—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É
          encoding: Encoding.UTF8,
        });

        await Share.share({
          title: "–†–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è EdwIC",
          text: "üíæ –ó–±–µ—Ä–µ–∂—ñ—Ç—å —Ü–µ–π —Ñ–∞–π–ª —É –Ω–∞–¥—ñ–π–Ω–æ–º—É –º—ñ—Å—Ü—ñ.",
          url: result.uri, // –ü–µ—Ä–µ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É
          dialogTitle: "–ó–±–µ—Ä–µ–≥—Ç–∏ –∞–±–æ –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—é –∫–æ–ø—ñ—î—é",
        });

      } else {
        // --- –†–ï–ê–õ–Ü–ó–ê–¶–Ü–Ø –î–õ–Ø WEB BROWSER ---
        const blob = new Blob([json], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        
        link.href = url;
        link.download = fileName;
        
        // –î–æ–¥–∞—î–º–æ, –∫–ª—ñ–∫–∞—î–º–æ —ñ –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);

        // –û—á–∏—â—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π URL
        URL.revokeObjectURL(url);
      }
    } catch (err) {
      // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä–∏–≤ –¥—ñ–∞–ª–æ–≥–æ–≤–µ –≤—ñ–∫–Ω–æ "Share"
      if (err.message !== "Share canceled") {
        setError(`–ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É: ${err.message}`);
        console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó:", err);
      }
    } finally {
      setLoading(false);
    }
  };

  const handleImportClick = () => fileInputRef.current.click();

  const handleFileChange = (event) => {
    const file = event.target.files[0];
    if (!file) return;
    const reader = new FileReader();
    reader.onload = (e) => {
      try {
        const importedConfig = JSON.parse(e.target.result);
        if (importedConfig?.brokers && importedConfig?.dashboards) {
          if (
            window.confirm(
              "–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è? –ü–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±—É–¥—É—Ç—å –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω—ñ."
            )
          ) {
            setAppConfig(importedConfig);
            alert("–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ! –î–æ–¥–∞—Ç–æ–∫ –±—É–¥–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.");
            window.location.reload();
          }
        } else {
          throw new Error("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó.");
        }
      } catch (err) {
        setError(`–ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É: ${err.message}`);
        console.error("Import error:", err);
      }
    };
    reader.readAsText(file);
    event.target.value = null; // –°–∫–∏–¥–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è —ñ–Ω–ø—É—Ç—É
  };

  const handleReset = () => {
    if (
      window.confirm(
        "–í–ò –í–ü–ï–í–ù–ï–ù–Ü? –¶—è –¥—ñ—è –≤–∏–¥–∞–ª–∏—Ç—å –≤—Å—ñ –≤–∞—à—ñ –¥–∞—à–±–æ—Ä–¥–∏ —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±—Ä–æ–∫–µ—Ä–∞. –í—ñ–¥–º—ñ–Ω–∏—Ç–∏ —Ü–µ –±—É–¥–µ –Ω–µ–º–æ–∂–ª–∏–≤–æ."
      )
    ) {
      localStorage.removeItem("appConfig");
      alert("–í—Å—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∫–∏–Ω—É—Ç–æ. –î–æ–¥–∞—Ç–æ–∫ –±—É–¥–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.");
      window.location.reload();
    }
  };

  return (
    <Box sx={{ maxWidth: 600, margin: "auto", padding: 2 }}>
      <Typography variant="h4" gutterBottom>
        –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è EdWic
      </Typography>

      <Tabs value={tabIndex} onChange={(e, newIndex) => setTabIndex(newIndex)} sx={{ mb: 2 }}>
        <Tab label="–†–µ–∑–µ—Ä–≤–Ω–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è" />
        <Tab label="–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –ë—Ä–æ–∫–µ—Ä–∞" />
      </Tabs>

      {tabIndex === 0 && (
        <Box sx={{ mt: 2 }}>
          <Typography variant="h6" gutterBottom>
            –†–µ–∑–µ—Ä–≤–Ω–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è
          </Typography>
          {/* –í–∏–∫–ª–∏–∫–∞—î–º–æ –Ω–æ–≤—É —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é */}
          <Button variant="contained" fullWidth onClick={handleExportConfig} disabled={loading} sx={{ mb: 2 }}>
            {loading ? <CircularProgress size={24} color="inherit" /> : "–ï–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"}
          </Button>

          <input type="file" ref={fileInputRef} onChange={handleFileChange} style={{ display: "none" }} accept=".json" />
          <Button variant="contained" fullWidth sx={{ mb: 1 }} onClick={handleImportClick}>
            –Ü–º–ø–æ—Ä—Ç –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω—å (JSON)
          </Button>
          <Button variant="contained" color="error" fullWidth onClick={handleReset}>
            –°–∫–∏–Ω—É—Ç–∏ –í—Å—ñ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          </Button>
          <Typography variant="caption" display="block" sx={{ mt: 1, color: "text.secondary" }}>
            –¶–µ —Å–∫–∏–Ω–µ –≤—Å—ñ –±—Ä–æ–∫–µ—Ä–∏, –¥–∞—à–±–æ—Ä–¥–∏ —Ç–∞ –≤—ñ–¥–∂–µ—Ç–∏!
          </Typography>
          {error && (
            <Typography color="error" sx={{ mt: 2, wordBreak: "break-word" }}>
              {error}
            </Typography>
          )}
        </Box>
      )}

      {tabIndex === 1 && (
        <Box sx={{ mt: 2 }}>
          <Typography variant="h6" gutterBottom>
            –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –û—Å–Ω–æ–≤–Ω–æ–≥–æ MQTT –ë—Ä–æ–∫–µ—Ä–∞
          </Typography>
          <TextField fullWidth label="IP –±—Ä–æ–∫–µ—Ä–∞ / Hostname" name="host" value={currentBrokerConfig.host} onChange={handleBrokerConfigChange} sx={{ mb: 2 }} required />
          <TextField fullWidth label="–ü–æ—Ä—Ç –±—Ä–æ–∫–µ—Ä–∞ (WebSockets, –Ω–∞–ø—Ä. 8083)" name="port" value={currentBrokerConfig.port} onChange={handleBrokerConfigChange} sx={{ mb: 2 }} type="number" required />
          <TextField fullWidth label="–õ–æ–≥—ñ–Ω" name="username" value={currentBrokerConfig.username} onChange={handleBrokerConfigChange} sx={{ mb: 2 }} />
          <TextField fullWidth label="–ü–∞—Ä–æ–ª—å" type="password" name="password" value={currentBrokerConfig.password} onChange={handleBrokerConfigChange} sx={{ mb: 2 }} />
          <TextField fullWidth label="–ë–∞–∑–æ–≤–∏–π —à–ª—è—Ö (Basepath, –Ω–∞–ø—Ä. /ws)" name="basepath" value={currentBrokerConfig.basepath} onChange={handleBrokerConfigChange} sx={{ mb: 2 }} helperText="–Ø–∫—â–æ –±—Ä–æ–∫–µ—Ä –≤–∏–º–∞–≥–∞—î —à–ª—è—Ö —É URL –¥–ª—è WebSockets (–Ω–∞–ø—Ä. /ws, /mqtt)" />
          <TextField fullWidth label="–¢–æ–ø—ñ–∫ –¥–ª—è Discovery" name="discovery_topic" value={currentBrokerConfig.discovery_topic} onChange={handleBrokerConfigChange} sx={{ mb: 2 }} helperText="–ù–∞–ø—Ä–∏–∫–ª–∞–¥, 'homeassistant' (–±–µ–∑ #). –Ø–∫—â–æ –∑–∞–ª–∏—à–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º, –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ 'homeassistant'." />
          <FormControlLabel control={ <Checkbox checked={!!currentBrokerConfig.secure} onChange={handleBrokerConfigChange} name="secure" /> } label="–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ Secure WebSockets (WSS)" sx={{ mb: 2 }} />
          {error && <Typography color="error" sx={{ mb: 2 }}>{error}</Typography>}
          <Button variant="contained" fullWidth onClick={handleSaveBroker} disabled={loading}>
            {loading ? <CircularProgress size={24} /> : "–ó–±–µ—Ä–µ–≥—Ç–∏ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ë—Ä–æ–∫–µ—Ä–∞"}
          </Button>
        </Box>
      )}

      <Button variant="outlined" fullWidth sx={{ mt: 4 }} onClick={() => navigate(`/${Object.keys(appConfig.dashboards)[0] || ""}`)}>
        –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –î–∞—à–±–æ—Ä–¥
      </Button>
    </Box>
  );
}

export default SettingsPage;